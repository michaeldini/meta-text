"""add user_id to sourcedocument

Revision ID: 7fb44c5e6678
Revises: b1bbcf093d8f
Create Date: 2025-07-18 15:12:39.813325

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7fb44c5e6678'
down_revision: Union[str, None] = 'b1bbcf093d8f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # For SQLite compatibility, add user_id as nullable, fill with a default, then alter to NOT NULL
    with op.batch_alter_table('sourcedocument') as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
    # Set a default user_id for existing rows (e.g., 1). Adjust as needed for your data!
    op.execute('UPDATE sourcedocument SET user_id = 1 WHERE user_id IS NULL')
    with op.batch_alter_table('sourcedocument') as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.create_foreign_key('fk_sourcedocument_user_id_user', 'user', ['user_id'], ['id'])

    # For metatext, drop and recreate the foreign key with explicit name for SQLite
    with op.batch_alter_table('metatext') as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.create_foreign_key('fk_metatext_user_id_user', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sourcedocument') as batch_op:
        batch_op.drop_constraint('fk_sourcedocument_user_id_user', type_='foreignkey')
        batch_op.drop_column('user_id')
    with op.batch_alter_table('metatext') as batch_op:
        batch_op.drop_constraint('fk_metatext_user_id_user', type_='foreignkey')
        batch_op.alter_column('user_id', nullable=True)
    # ### end Alembic commands ###
